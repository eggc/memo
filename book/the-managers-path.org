https://www.oreilly.co.jp/books/9784873118482/


* 1 マネジメント
** 1.1 上司をうまく使う方法

- 1on1
  - 少しのプライベート
  - 話したいテーマを事前に持っていく
- フィードバックをもらう
  - 良い点の賞賛
  - よくない点の苦言
- 打ち明ける
  - 人間関係の相談
  - 出世したいことの相談
  - つまらない仕事の意義をたずねる
- 許可を得る
  - カンファレンス参加や書籍購入の補助
  - 部署連携の方法を尋ねる

* 2
* 3 テックリード
** 3.1 ポイント

扱う課題が広がるため時間管理が難しくなる。
スケジュールに注意する。

** 3.2 基礎知識

プロジェクトに従属している場合は、プロジェクトを成功に導くことが責任となる。システムアーキテクト、ビジネスアナリスト、プロジェクトマネージャー、チームリーダー、プログラマーなど状況に応じて色々な役割を果たす。求められるスキルも多様になる。

- プロダクトの理解
  - コードや設計の理解
  - ビジネスの理解
- ソフトウェア設計スキル
- 要件整理スキル

** 3.3 プロジェクトの管理

（プロジェクトマネジメントは大変）

** 3.4 プロジェクトマネジメントの業務の紹介

（プロジェクトマネジメントの業務内容）

** 3.5 テックリードが向き合う課題

技術者としての課題：たとえそれに相応しい能力を持っていても、自分にしかできないプロジェクトが存在して、それを解決し、昇進するということはあまりない。新しい技術を使ったりアイデアを導入することはあまり望まれないことも多い。組織にとって価値があるということを説得することにも多くの時間を割かなければならない。主導権争いに巻き込まれやすい。ただ、工学的問題と向き合う時間は長い。

マネージャーとしての課題：依頼や指示をしてもなかなか思い通りに人が動かない。悪いニュースを伝えたり、励ましたりする1on1やフィードバックの難しさ。上司は期待通りの人材を配置してくれない。

** 3.6 プロセスへの固執

何かうまくいかないことがあるとプロセスを細かく見直してルールを立てていくのは必ずしも最善策とはいえない。柔軟性のあるプロセスに変えて行ったほうがうまくいくことが多い。

** 3.7 テックリードへの期待

- アーキテクチャを理解している：機能がどのように実現されているか、データの流れや相関図などが頭の中にある。
- チームプレイができる：自分で作業してばかりはよくない。退屈な作業や困難な作業を引き受ける。モチベーションのために、面白い作業もたまには引き取ろう。
- 技術的な意思決定に関与する：独断で決めるのはよくないし、チームがやるのに任せっぱなしもダメ。
- コミュニケーション：チームの生産性に寄与するための会話や情報伝達をする
